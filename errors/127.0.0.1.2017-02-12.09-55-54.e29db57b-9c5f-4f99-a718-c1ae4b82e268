(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Field' object has no attribute '_id'"
p3
sS'layer'
p4
S'/opt/python/web2py-files/web2py/applications/proyect/controllers/especialista.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\ndef listado_preguntas():\n    if request.cid:\n\n        preguntas = []\n\n        if request.vars.diagnostico:\n            diagnostico = db.diagnostico(request.vars.diagnostico)\n            if diagnostico:\n                preguntas = diagnostico.pregunta\n            else:\n                raise HTTP(403)\n        else:\n            raise HTTP(502)\n\n        fields = [db.pregunta.texto, db.pregunta.respuesta, db.pregunta.tipo, db.pregunta.puntos]\n\n        preguntas = db(db.pregunta.id.belongs(preguntas)).select()\n\n        response.headers[\'web2py-component-flash\']=T("Listado de preguntas")\n        return dict(preguntas=preguntas)\n    else:\n        raise HTTP(403)\n\ndef listado_diagnostico():\n        fields = [db.diagnostico.titulo, db.diagnostico.descripcion, db.diagnostico.activo, db.diagnostico.tipo]\n\n        grid = SQLFORM.smartgrid(db.diagnostico, fields=fields, create=False, editable=True, exportclasses=dict(xml=False, html=False, json=False, csv_with_hidden_cols=False, tsv_with_hidden_cols=False, csv=False, tsv=False))\n        return dict(grid=grid)\n\n\n@auth.requires_membership("Especialista")\ndef lista_diagnostico():\n\n    fields = [db.diagnostico.titulo, db.diagnostico.descripcion, db.diagnostico.activo, db.diagnostico.tipo]\n\n    grid = SQLFORM.smartgrid(db.diagnostico.tipo, fields=fields, create=False, editable=True, exportclasses=dict(xml=False, html=False, json=False, csv_with_hidden_cols=False, tsv_with_hidden_cols=False, csv=False, tsv=False))\n\n\n    response.title = T(\'Cuestionarios "Diagn\xc3\xb3stico Inicial"\') + response.title\n    response.flash = T(\'Cuestionarios "Diagn\xc3\xb3stico Inicial\')\n    return dict(grid=grid)\n\n@auth.requires_membership("Especialista")\ndef nuevo_diagnostico():\n    response.flash = T("Nuevo Diagn\xc3\xb3stico")\n    response.title = T("Nuevo Diagn\xc3\xb3stico") + response.title\n\n    form = SQLFORM(db.diagnostico, fields=[\'titulo\', \'descripcion\', \'activo\'])\n\n    if form.validate():\n        diagnostico = dict(form.vars)\n        diagnostico[\'tipo\'] = 0\n        form.vars.id = db.diagnostico.insert(**diagnostico)\n\n        response.flash = T(\'Nuevo cuestionario Diagn\xc3\xb3stico Inicial insertado\')\n\n    elif form.errors:\n        response.flash = T(\'El formulario tiene errores\')\n    else:\n        response.flash = T(\'Por favor complete el formulario\')\n    return dict(form=form)\n\n@auth.requires_membership("Especialista")\ndef asignar_diagnostico():\n    response.flash = T("Asignar Diagn\xc3\xb3stico")\n    response.title = T("Asignar Diagn\xc3\xb3stico") + response.title\n    return dict()\n\nresponse._vars=response._caller(lista_diagnostico)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/opt/python/web2py-files/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/opt/python/web2py-files/web2py/applications/proyect/controllers/especialista.py", line 71, in <module>\n  File "/opt/python/web2py-files/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/opt/python/web2py-files/web2py/gluon/tools.py", line 4241, in f\n    return action(*a, **b)\n  File "/opt/python/web2py-files/web2py/applications/proyect/controllers/especialista.py", line 38, in lista_diagnostico\n    grid = SQLFORM.smartgrid(db.diagnostico.tipo, fields=fields, create=False, editable=True, exportclasses=dict(xml=False, html=False, json=False, csv_with_hidden_cols=False, tsv_with_hidden_cols=False, csv=False, tsv=False))\n  File "/opt/python/web2py-files/web2py/gluon/sqlhtml.py", line 3039, in smartgrid\n    query = table._db._adapter.id_query(table)\n  File "/opt/python/web2py-files/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1861, in id_query\n    return table._id > 0\nAttributeError: \'Field\' object has no attribute \'_id\'\n'
p11
s.