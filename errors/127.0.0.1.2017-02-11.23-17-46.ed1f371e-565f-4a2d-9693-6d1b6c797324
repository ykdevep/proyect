(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Field' object has no attribute 'text'"
p3
sS'layer'
p4
S'/opt/python/web2py-files/web2py/applications/proyect/controllers/especialista.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\ndef listado_preguntas():\n    if request.cid:\n        fields = [db.diagnostico_pregunta.pregunta.text]\n\n        grid = SQLFORM.grid((db.diagnostico_pregunta.diagnostico == request.vars.diagnostico), fields=fields, create=False, paginate=50, deletable=False, details=False, editable=True, exportclasses=dict(xml=False, html=False, json=False, csv_with_hidden_cols=False, tsv_with_hidden_cols=False, csv=False, tsv=False))\n\n        response.headers[\'web2py-component-flash\']=T("Listado de preguntas")\n        return dict(grid=grid)\n    else:\n        raise HTTP(403)\n\ndef listado_cuestionario_diagnostico():\n\n    fields = [db.diagnostico.titulo, db.diagnostico.descripcion, db.diagnostico.activo, db.diagnostico.tipo]\n\n    grid = SQLFORM.grid(db.diagnostico.tipo == 0, fields=fields, create=False, exportclasses=dict(xml=False, html=False, json=False, csv_with_hidden_cols=False, tsv_with_hidden_cols=False, csv=False, tsv=False))\n\n    response.flash = T("Listado de Diagn\xc3\xb3stico")\n\n    return dict(grid=grid)\n\n\ndef __activo(flag):\n    \'\'\'\n    Funci\xc3\xb3n que devuelve un ayudante\n    \'\'\'\n    if flag:\n        return A(XML(\'<i class="glyphicon glyphicon-ok"></i> \'), _class="btn btn-danger", **{\'_data-toggle\': "tooltip", \'_title\': T("Cuestionario diagn\xc3\xb3stico activo"), \'_data-placement\': "right"})\n    else:\n        return A(XML(\'<i class="glyphicon glyphicon-remove"></i> \'), _class="btn btn-info", **{\'_data-toggle\': "tooltip", \'_title\': T("Cuestionario diagn\xc3\xb3stico desactivado"), \'_data-placement\': "right"})\n\n@auth.requires_membership("Especialista")\ndef lista_diagnostico():\n\n    response.title = T("Listado de Diagn\xc3\xb3stico") + response.title\n    return dict()\n\n@auth.requires_membership("Especialista")\ndef nuevo_diagnostico():\n    response.flash = T("Nuevo Diagn\xc3\xb3stico")\n    response.title = T("Nuevo Diagn\xc3\xb3stico") + response.title\n\n    form = SQLFORM(db.diagnostico)\n\n    if form.validate():\n        form.vars.id = db.diagnostico.insert(**dict(form.vars))\n\n        response.flash = T(\'Nuevo cuestionario Diagn\xc3\xb3stico Inicial insertado\')\n\n    elif form.errors:\n        response.flash = T(\'El formulario tiene errores\')\n    else:\n        response.flash = T(\'Por favor complete el formulario\')\n    return dict(form=form)\n\n@auth.requires_membership("Especialista")\ndef asignar_diagnostico():\n    response.flash = T("Asignar Diagn\xc3\xb3stico")\n    response.title = T("Asignar Diagn\xc3\xb3stico") + response.title\n    return dict()\n\nresponse._vars=response._caller(listado_preguntas)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/opt/python/web2py-files/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/opt/python/web2py-files/web2py/applications/proyect/controllers/especialista.py", line 64, in <module>\n  File "/opt/python/web2py-files/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/opt/python/web2py-files/web2py/applications/proyect/controllers/especialista.py", line 5, in listado_preguntas\n    fields = [db.diagnostico_pregunta.pregunta.text]\nAttributeError: \'Field\' object has no attribute \'text\'\n'
p11
s.